using Content.Client.UserInterface;
using Content.Shared._NF.M_Emp;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client._NF.M_Emp.UI
{
    [GenerateTypedNameReferences]
    public sealed partial class M_EmpWindow : DefaultWindow
    {
        public M_EmpWindow(M_EmpBoundUserInterface ui)
        {
            RobustXamlLoader.Load(this);
            IoCManager.InjectDependencies(this);

            RequestButton.OnPressed += _ => ui.ButtonPressed(UiButton.Request);
            ActivateButton.OnPressed += _ => ui.ButtonPressed(UiButton.Activate);
        }

        /// <summary>
        /// Update the UI state when new state data is received from the server.
        /// </summary>
        /// <param name="state">State data sent by the server.</param>
        public void UpdateState(BoundUserInterfaceState state)
        {
            var castState = (M_EmpBoundUserInterfaceState) state;

            // Disable all buttons if not powered
            if (Contents.Children != null)
            {
                ButtonHelpers.SetButtonDisabledRecursive(Contents, !castState.HasPower);
            }

            //CoreCount.Text = $"{castState.CoreCount}";
            //InjectionAmount.Text = $"{castState.InjectionAmount}";
        }
    }
}
